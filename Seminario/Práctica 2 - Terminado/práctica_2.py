# -*- coding: utf-8 -*-
"""Práctica 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B8aNB1ljN8BX_2Yyp5XRM1LKyOck6bEZ
"""

from google.colab import files
uploaded = files.upload()

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# Carga de datos
data = pd.read_csv("Salary_dataset.csv")

# Extracción de variables
years_experience = data["YearsExperience"]
salary = data["Salary"]

# Cálculo de promedios
mean_years_experience = np.mean(years_experience)
mean_salary = np.mean(salary)

# Función para calcular la pendiente (coeficiente beta_1)
def calculate_slope(x, y, mean_x, mean_y):
    numerator = np.sum((x - mean_x) * (y - mean_y))
    denominator = np.sum((x - mean_x) ** 2)
    return numerator / denominator

# Cálculo de la pendiente (coeficiente beta_1)
slope = calculate_slope(years_experience, salary, mean_years_experience, mean_salary)

# Cálculo del intercepto (coeficiente beta_0)
intercept = mean_salary - slope * mean_years_experience

# Predicción para nuevos datos
new_experience = 6.5
predicted_salary = intercept + slope * new_experience
print("Predicción del Salario con", str(new_experience), "Años de Experiencia:", predicted_salary)

# Gráfica de dispersión y línea de regresión
plt.figure(figsize=(8, 6))
plt.scatter(years_experience, salary, label="Datos Originales")
plt.plot(years_experience, slope * years_experience + intercept, color="red", linewidth=1, label="Línea de Regresión")
plt.xlabel('Años de Experiencia')
plt.ylabel('Salario')
plt.title('Regresión Lineal (Salario según la Experiencia)')
plt.legend()

# Agregando el valor predicho en la gráfica
plt.text(new_experience, predicted_salary, f'Predicción: {predicted_salary:.2f}', color='red', fontsize=9)

# Agregando el punto predicho en el grid
plt.scatter(new_experience, predicted_salary, color='purple', marker='o', s=100, label='Predicción')

plt.grid(True)
plt.show()