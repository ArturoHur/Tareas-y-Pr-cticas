# -*- coding: utf-8 -*-
"""Tarea 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N0P9ZoeJrc47vrClRYhHyJ-Ey9fsQpD4
"""

!pip install unidecode

from unidecode import unidecode
import random

generos_musicales = {
    "rock": ["Queen", "Led Zeppelin", "The Beatles", "AC/DC", "Pink Floyd", "Fall Out Boy", "Imagine Dragons"],
    "pop": ["Taylor Swift", "Ed Sheeran", "Ariana Grande", "Bruno Mars", "Beyoncé", "Lukas Graham", "Panic at the Disco"],
    "electrónica": ["Daft Punk", "Calvin Harris", "David Guetta", "The Chainsmokers", "Marshmello"],
    "hip hop": ["Eminem", "Kendrick Lamar", "Drake", "Jay-Z", "Kanye West"],
    "clásica": ["Mozart", "Beethoven", "Bach", "Tchaikovsky", "Chopin"],
}


canciones = {
    "Queen": ["Bohemian Rhapsody", "Another One Bites the Dust", "We Will Rock You", "Don't Stop Me Now", "Under Pressure"],
    "Led Zeppelin": ["Stairway to Heaven", "Whole Lotta Love", "Kashmir", "Black Dog", "Immigrant Song"],
    "The Beatles": ["Hey Jude", "Let It Be", "Yesterday", "Come Together", "Help!"],
    "AC/DC": ["Back in Black", "Highway to Hell", "Thunderstruck", "You Shook Me All Night Long", "T.N.T."],
    "Pink Floyd": ["Comfortably Numb", "Wish You Were Here", "Another Brick in the Wall", "Time", "Money"],
    "Fall Out Boy": ["Sugar, We're Goin Down", "Thnks fr th Mmrs", "Centuries", "Dance, Dance", "My Songs Know What You Did in the Dark"],
    "Imagine Dragons": ["Radioactive", "Demons", "Believer", "Thunder", "Whatever It Takes"],
    "Taylor Swift": ["Love Story", "Shake It Off", "Blank Space", "You Belong with Me", "I Knew You Were Trouble"],
    "Ed Sheeran": ["Shape of You", "Thinking Out Loud", "Perfect", "Castle on the Hill", "Photograph"],
    "Ariana Grande": ["Thank U, Next", "7 Rings", "No Tears Left to Cry", "Into You", "Break Free"],
    "Bruno Mars": ["Uptown Funk", "Just the Way You Are", "Locked Out of Heaven", "24K Magic", "Grenade"],
    "Beyoncé": ["Single Ladies", "Halo", "Crazy in Love", "Irreplaceable", "Drunk in Love"],
    "Lukas Graham": ["7 Years", "Love Someone", "Mama Said", "You're Not There", "Lie"],
    "Panic at the Disco": ["I Write Sins Not Tragedies", "High Hopes", "Death of a Bachelor", "Victorious", "Emperor's New Clothes"],
    "Daft Punk": ["Get Lucky", "One More Time", "Harder, Better, Faster, Stronger", "Instant Crush", "Around the World"],
    "Calvin Harris": ["Summer", "Feel So Close", "This Is What You Came For", "Blame", "Sweet Nothing"],
    "David Guetta": ["Titanium", "When Love Takes Over", "Without You", "Hey Mama", "Memories"],
    "The Chainsmokers": ["Closer", "Something Just Like This", "Paris", "Roses", "Don't Let Me Down"],
    "Marshmello": ["Happier", "Alone", "Friends", "Wolves", "Silence"],
    "Eminem": ["Lose Yourself", "Without Me", "Rap God", "Stan", "The Real Slim Shady"],
    "Kendrick Lamar": ["HUMBLE.", "Alright", "DNA.", "Swimming Pools (Drank)", "LOVE."],
    "Drake": ["Hotline Bling", "In My Feelings", "God's Plan", "One Dance", "Started From the Bottom"],
    "Jay-Z": ["Empire State of Mind", "99 Problems", "Hard Knock Life", "Run This Town", "Big Pimpin'"],
    "Kanye West": ["Stronger", "Heartless", "Gold Digger", "Power", "Jesus Walks"],
    "Mozart": ["Eine kleine Nachtmusik", "Symphony No. 40", "Piano Sonata No. 16", "Requiem", "The Magic Flute"],
    "Beethoven": ["Symphony No. 9", "Moonlight Sonata", "Für Elise", "Symphony No. 5", "Piano Sonata No. 14"],
    "Bach": ["Air on the G String", "Toccata and Fugue in D Minor", "Brandenburg Concertos", "Cello Suites", "Goldberg Variations"],
    "Tchaikovsky": ["Swan Lake", "1812 Overture", "The Nutcracker", "Romeo and Juliet", "Symphony No. 6"],
    "Chopin": ["Nocturnes", "Prelude in D-flat Major", "Ballade No. 1", "Études", "Polonaises"],
}

def saludar():
    print("\n\nTe ayudaré a encontrar Música Genial. Por favor, Elige uno o varios Géneros musicales separados por comas.")

def mostrar_generos_disponibles():
    print("\nGéneros disponibles:")
    for genero in generos_musicales:
        print(f"- {genero.capitalize()}")

def recomendar_musica():
    print("\n\n¡Bienvenido al Chatbot de Recomendación Musical!")
    while True:
        saludar()
        mostrar_generos_disponibles()

        generos_elegidos = input("\nElige el/los Géneros Musicales en los que estes Interesad@: ").lower().split(',')

        recomendaciones_totales = {}

        for genero in generos_elegidos:
            genero = genero.strip()
            if genero in generos_musicales:
                recomendaciones_totales[genero] = generos_musicales[genero]
            elif genero == "electronica":
                recomendaciones_totales["electrónica"] = generos_musicales["electrónica"]
            else:
                print(f"El género '{genero}' no está disponible.")

        if recomendaciones_totales:
            print("\n¡Aquí tienes algunas recomendaciones de música!")
            for genero, recomendaciones in recomendaciones_totales.items():
                print(f"\nRecomendaciones de {genero.capitalize()}:")
                for recomendacion in recomendaciones:
                    print("- " + recomendacion)

            respuesta = input("\n¿Quieres que se te recomiende una canción de alguno de estos artistas? (Escribe el nombre del artista o escribe 'no'): ").strip()

            if unidecode(respuesta.lower()) != "no":
                artist_found = False  # Reiniciando la bandera para cada solicitud de artista
                for artist, songs in canciones.items():
                    if unidecode(artist.lower()) == unidecode(respuesta.lower()) or unidecode(respuesta.lower()) in [unidecode(song.lower()) for song in songs]:
                        artist_found = True
                        if unidecode(artist.lower()) == unidecode(respuesta.lower()):
                            print(f"Aquí tienes algunas canciones recomendadas de {artist.capitalize()}:")
                            selected_songs = random.sample(songs, k=min(3, len(songs)))
                            for cancion in selected_songs:
                                print("- " + cancion)
                        else:
                            print(f"¡Aquí tienes una canción recomendada de {artist.capitalize()}: {respuesta.capitalize()}")
                            # Aquí podrías agregar lógica para recomendar una canción específica del artista seleccionado
                        break
                if not artist_found:
                    print("El artista o la canción seleccionada no está en la lista.")

        else:
            print("\nNo se encontraron recomendaciones para los géneros seleccionados.")

        continuar = input("\n¿Quieres recibir recomendaciones de más géneros musicales? (Escribe 'si' o 'no'): ").strip().lower()
        if continuar != "si":
            print("\n¡Gracias por usar el Chatbot de Recomendación Musical!")
            break

recomendar_musica()